<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="iRacingSDK" #>
<# var data = iRacing.GetDataFeed().First(); #>

// This file is part of iRacingSDK.
//
// Copyright 2014 Dean Netherton
// https://github.com/vipoo/iRacingSDK.Net
//
// iRacingSDK is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// iRacingSDK is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with iRacingSDK.  If not, see <http://www.gnu.org/licenses/>.

using System;
using System.Collections.Generic;
using System.Linq;

namespace iRacingSDK
{
    public partial class Telemetry : Dictionary<string, object>
    {
        public SessionData SessionData { get; set; }

<# foreach(var kv in data.Telemetry) 
{
    var type =  GenerateDataModels.Program.GetTypeFor(kv.Key, kv.Value);
 #>
        /// <summary>
        /// <#= data.TelemetryDescription.ContainsKey(kv.Key) ? data.TelemetryDescription[kv.Key] : "" #>
        /// </summary>
        public <#= type #> 	<#= kv.Key #>				{ get { return (<#= type #>)		this["<#= kv.Key #>"]; 			} }

<#} #>
    }
}
